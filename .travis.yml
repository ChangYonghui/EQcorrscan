language: python
os:
  - linux
  # - osx  # Note, travis doesn't support python builds on osx
python:
  - "2.7"
  # - "3.3"
  # - "3.4"
  - "3.5"
# virtualenv:
#     system_site_packages: true
sudo: false

# Test with multiple obspy versions, allow some backwards compatability
env:
  - OBSPY_VERSION=1.0.1

# before install:
#   - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update        ; fi
#   - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install pandoc; fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export OS="MacOSX";
      export py=$PYTHON_VERSION;
    else
      export OS="Linux";
      export py=$TRAVIS_PYTHON_VERSION;
    fi
  - if [[ "$py" == "2.7_with_system_site_packages" ]]; then
      export py="2.7";
    fi
  - if [[ "${py:0:1}" == '2' ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-${OS}-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-${OS}-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - |
      if [[ "$py" == "3.3" ]]; then
        NUMPY_VERSION=1.9.2
        SCIPY_VERSION=0.16.0
        MPL_VERSION=1.4.3
        BASEMAP_VERSION="1.0.7"
        PYPROJ=""
        PYTEST="pytest>=2.8"
        PYFLAKES="pyflakes=0.9.0"
      elif [[ "$py" == "3.5" ]]; then
        NUMPY_VERSION=1.10.0
        SCIPY_VERSION=0.16.0
        MPL_VERSION=1.4.3
        BASEMAP_VERSION="1.0.7"
        PYPROJ=""
        PYTEST="pytest>=2.8"
        PYFLAKES="pyflakes=1.0.0"
      elif [[ "${py:0:1}" == '3' ]]; then
        NUMPY_VERSION=1.10.4
        SCIPY_VERSION=0.17.0
        MPL_VERSION=1.5.1
        BASEMAP_VERSION=1.0.7
        PYPROJ="pyproj"
        PYTEST=""
        PYFLAKES="pyflakes=0.9.0"
      else
        NUMPY_VERSION=1.10.4
        SCIPY_VERSION=0.17.0
        MPL_VERSION=1.5.1
        BASEMAP_VERSION=1.0.7
        PYPROJ="pyproj"
        PYTEST=""
        PYFLAKES="pyflakes=0.9.0"
      fi
  - conda create -q -n test-environment
        python=$py
        numpy=$NUMPY_VERSION
        scipy=$SCIPY_VERSION
        matplotlib=$MPL_VERSION
        basemap=$BASEMAP_VERSION
        $PYPROJ
        $PYTEST
        flake8
        future
        lxml
        sqlalchemy
        mock
        gdal
        docopt
        coverage
        requests
        pytest
        $PYFLAKES
        pytest-pep8
        # opencv
  - source activate test-environment
  # install packages not available via conda
  # - pip install -r requirements.txt
  - |
      if [[ "${py:0:1}" == '3' ]]; then
        OPENCV="-c menpo opencv3=3.1.0"
      else
        OPENCV="opencv"
      fi
  - conda install $OPENCV
  - conda install -c janschulz pypandoc=1.1.3
  - conda install -c menpo coveralls=1.1
  - pip install geographiclib
  - pip install pytest-cov
  # Copy opencv cv2.so file to path
  # - cp /usr/lib/pymodules/python2.7/cv2.so /home/travis/build/calum-chamberlain/EQcorrscan/.
  # current pyimgur stable release has a py2.6 incompatibility
  # - pip install https://github.com/megies/PyImgur/archive/py26.zip
  - conda install -c obspy obspy=$OBSPY_VERSION
  # - pip install obspy==$OBSPY_VERSION
  - pip freeze
  - conda list
  # done installing dependencies
  - git version
  - pip install .
script:
  # Run the tests available, more should be added
  python setup.py test

after_success:
  # Check how much code is actually tested and send this report to coveralls
  - coverage combine
  - coveralls

notifications:
    email: false
    webhooks:
      urls:
        - https://webhooks.gitter.im/e/10122f10ed5043c58ae7
      on_success: change  # options: [always|never|change] default: always
      on_failure: always  # options: [always|never|change] default: always
      on_start: never     # options: [always|never|change] default: always
